@model Onboarding.Models.Task

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Task</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Course)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Course.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Mentor)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Mentor.Name) @Html.DisplayFor(model => model.Mentor.Surname)

            @* // This leads to chat with mentor specified in task. *@
            <a href="@Url.Action("Index", "Chat", new { receiverId = Model.MentorId })">

                @* // This span can be changed to a button or whatever front is needed. *@
                <span class="requestHelpButton">Request help from Mentor</span>
            </a>
        </dd>
    </dl>
</div>

<h4>Articles</h4>
<hr />
@if (Model.Articles.Any())
{
    <ul>
        @foreach (var article in Model.Articles)
        {
            <li>@article.Content</li> 
        }
    </ul>
}
else
{
    <p>No articles available for this task.</p> 
}

<h4>Links</h4>
<hr />
@if (Model.Links.Any())
{
    <ul>
        @foreach (var link in Model.Links)
        {
            <li>@link.LinkUrl</li>
        }
    </ul>
}
else
{
    <p>No Links available for this task.</p>
}

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
